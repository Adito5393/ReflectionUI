<?xml version="1.0" encoding="ASCII"?>
<Model generator="xy.website.static">
  <Node type="WebSite">
    <AttributeValue attributeName="footerText" value="&lt;p>Software is like sex: it's better when it's free.&lt;/p>"/>
    <AttributeValue attributeName="url" value="http://javacollection.net/reflectionui"/>
    <AttributeValue attributeName="title" value="ReflectionUI Java Library"/>
    <Node type="Page">
      <AttributeValue attributeName="title" value="Overview"/>
      <AttributeValue attributeName="content" value="This library allows to generate automatically the GUI&#xD;&#xA;(general user interface) of any Java object.&lt;br> &lt;br>The generation of the&#xD;&#xA;GUI requires no other information that the object itself. Its&#xD;&#xA;structure is discovered at runtime through Java reflection.The&#xD;&#xA;genrated GUI can be customized in a non-intrusive way by overriding&#xD;&#xA;some key methods of the generator objects."/>
    </Node>
    <Node type="Page">
      <AttributeValue attributeName="title" value="Features"/>
      <AttributeValue attributeName="content" value="&lt;ul>&#xD;&#xA;&lt;li>On the fly Swing UI generation&lt;/li>&#xD;&#xA;&lt;li>Generates UI for public fields&lt;/li>&#xD;&#xA;&lt;li>Generates UI for getter and setter fields&lt;/li>&#xD;&#xA;&lt;li>Generates UI for Method execution&lt;/li>&#xD;&#xA;&lt;li>Generates UI for Exceptions&lt;/li>&#xD;&#xA;&lt;li>Customizable UI generator&lt;/li>&#xD;&#xA;&lt;li>Extendable UI generator&lt;/li>&#xD;&#xA;&lt;li>UI generator pluggable to any data model&lt;/li>&#xD;&#xA;&lt;/ul>"/>
    </Node>
    <Node type="Page">
      <AttributeValue attributeName="title" value="Download"/>
      <AttributeValue attributeName="content" value="ReflectionUI is open source.&#xD;&#xA;Download it from the &lt;a href=&quot;https://github.com/olitank/ReflectionUI&quot;>Github repository&lt;/a>."/>
    </Node>
    <Node type="Page">
      <AttributeValue attributeName="title" value="Getting started"/>
      <AttributeValue attributeName="content" value="&lt;h3>How to run&lt;/h3>&#xD;&#xA;&#xD;&#xA;In order to test the library:&#xD;&#xA;&lt;ul>&#xD;&#xA;&lt;li>Run the following command from the reflection-ui directory:&lt;br> &#xD;&#xA;mvn install exec:java&lt;/li>&#xD;&#xA;&lt;li>Enter any class name in the input dialog. Example: java.util.Date&lt;/li>&#xD;&#xA;&lt;li>Enjoy!&lt;/li>&#xD;&#xA;&lt;/ul>&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;&lt;h3>How to use&lt;/h3>&#xD;&#xA;&#xD;&#xA;in order to generate the ReflectionUI jar file and its dependencies, run the following command from the reflection-ui directory:&lt;br>&#xD;&#xA;mvn install dependency:copy-dependencies&lt;br>&#xD;&#xA;&lt;br>&#xD;&#xA;Then start coding:&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;&lt;!-- HTML generated using hilite.me -->&lt;div style=&quot;background: #ffffff; overflow:auto;width:auto;border:solid gray;border-width:.1em .1em .1em .8em;padding:.2em .6em;&quot;>&lt;pre style=&quot;margin: 0; line-height: 125%&quot;>&lt;span style=&quot;color: #888888&quot;>/* The Hello world: */&lt;/span>&#xD;&#xA;Object myObject &lt;span style=&quot;color: #333333&quot;>=&lt;/span> &lt;span style=&quot;color: #008800; font-weight: bold&quot;>new&lt;/span> Date&lt;span style=&quot;color: #333333&quot;>();&lt;/span>&#xD;&#xA;ReflectionUI reflectionUI &lt;span style=&quot;color: #333333&quot;>=&lt;/span> &lt;span style=&quot;color: #008800; font-weight: bold&quot;>new&lt;/span> ReflectionUI&lt;span style=&quot;color: #333333&quot;>();&lt;/span>&#xD;&#xA;reflectionUI&lt;span style=&quot;color: #333333&quot;>.&lt;/span>&lt;span style=&quot;color: #0000CC&quot;>openObjectFrame&lt;/span>&lt;span style=&quot;color: #333333&quot;>(&lt;/span>myObject&lt;span style=&quot;color: #333333&quot;>,&lt;/span> &lt;span style=&quot;background-color: #fff0f0&quot;>&amp;quot;Hello world&amp;quot;&lt;/span>&lt;span style=&quot;color: #333333&quot;>,&lt;/span> &lt;span style=&quot;color: #008800; font-weight: bold&quot;>null&lt;/span>&lt;span style=&quot;color: #333333&quot;>);&lt;/span>&#xD;&#xA;&#xD;&#xA;&lt;span style=&quot;color: #888888&quot;>/* You can open a dialog instead of a frame: */&lt;/span>&#xD;&#xA;reflectionUI&lt;span style=&quot;color: #333333&quot;>.&lt;/span>&lt;span style=&quot;color: #0000CC&quot;>openObjectDialog&lt;/span>&lt;span style=&quot;color: #333333&quot;>(&lt;/span>&lt;span style=&quot;color: #008800; font-weight: bold&quot;>null&lt;/span>&lt;span style=&quot;color: #333333&quot;>,&lt;/span> myObject&lt;span style=&quot;color: #333333&quot;>,&lt;/span> &lt;span style=&quot;background-color: #fff0f0&quot;>&amp;quot;dialog instead&amp;quot;&lt;/span>&lt;span style=&quot;color: #333333&quot;>,&lt;/span> &lt;span style=&quot;color: #008800; font-weight: bold&quot;>null&lt;/span>&lt;span style=&quot;color: #333333&quot;>,&lt;/span>&#xD;&#xA;&#x9;&#x9;&lt;span style=&quot;color: #008800; font-weight: bold&quot;>true&lt;/span>&lt;span style=&quot;color: #333333&quot;>);&lt;/span>&#xD;&#xA;&#xD;&#xA;&lt;span style=&quot;color: #888888&quot;>/* You can just create a form and then insert it in any container: */&lt;/span>&#xD;&#xA;JOptionPane&lt;span style=&quot;color: #333333&quot;>.&lt;/span>&lt;span style=&quot;color: #0000CC&quot;>showMessageDialog&lt;/span>&lt;span style=&quot;color: #333333&quot;>(&lt;/span>&lt;span style=&quot;color: #008800; font-weight: bold&quot;>null&lt;/span>&lt;span style=&quot;color: #333333&quot;>,&lt;/span>&#xD;&#xA;&#x9;&#x9;reflectionUI&lt;span style=&quot;color: #333333&quot;>.&lt;/span>&lt;span style=&quot;color: #0000CC&quot;>createObjectForm&lt;/span>&lt;span style=&quot;color: #333333&quot;>(&lt;/span>myObject&lt;span style=&quot;color: #333333&quot;>));&lt;/span>&#xD;&#xA;&lt;/pre>&lt;/div>&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;Find the complete example code &lt;a href=&quot;Example.html&quot;>here&lt;/a>&#xD;&#xA;"/>
    </Node>
    <Node type="Link">
      <AttributeValue attributeName="text" value="Github Project"/>
      <AttributeValue attributeName="url" value="https://github.com/olitank/ReflectionUI"/>
    </Node>
  </Node>
</Model>