- List created from nullable Object field not editable.
Check.
- getFieldValueOptions() customizations will create a memory leak
if values are dynamic
- Customizations typeInfo should be retrieved on IControlData, 
not IFieldInfo
	. not enough in case of dynamic typing (ex: PolymorphicControl)
- allow to customize Method dialog "no data returned"
- add IListType:
	. getItemGetter(int)
	. getItemSetter(int,Obj)
- ITypeInfoProxyFactory: implement toString() on all implementations
- ReflectionUI parameter is often useless. Check
- toString() method must exclusively be used as a debugging tool
	ReflectionUI.toString(object) can be used for nice displays. Think about it
- polymorphiControl:
	. what if a polymorphic base type is a valid option itself (is concrete)?
	. what if there is only 1 subtype. use polymorphic control anyway?
- Non null field controls
	. must Be created basing on actual value type
	. Can also be enum control
- New windows must be centered in the activator screen, not the first screen always
- customizations editor recreates controls
and forms and often invalidates the customized UI
Ex: DialogAccessControl recreated while dialog open 
- secure cache ReflectionUI.precomputedTypeInfoByObject
- cleaning for end-developer:
	. add ReflectionUIError explicit messages
- rethink about read-only forms
- expose liscontrol selectionListening
- embedded details view:
	- allow to remove toolbar 
	- **** Initial **** Details View Occupation
	- focus lost on update: 
	an item update must trigger the recreation of 
	the details control 
- busy indicator when opening window
- add ITypeInfo.hasValueOptions()???
- icons, expanded field value, ... should be part of basic type info,
not swing specific properties, as it common to most renderers and can
be ignored if not displayable??? 
- add customization options:
	. list item details view detached	
- remove IListTypeInfo.getObjectSpecificItemConstructors???
- ITypeInfo.isModificationStackAccessible
	=> must be a SwingSpecificProperty???
- field auto-update???
- allow to sort list view
- update ScreenShots
- update Example
- Fix all the tests
- Cannot insert sub item into MultipleFieldAsList item
- MultipleFieldAsList with only 1 item???
- undo/redo bug (testable with TreeTableModelExample)
- list control:
	. hide edit button when useless???
- customizations edition:
	. sort lists (fileds, methods, columns, ...)
	. filter lists: remove renamed or deleted targets
	. remove adequately list control buttons (move, delete, ...)  
- preset customizations object names must be special 
	. ex: prefixe with '.': Field ".position" or ".type"
- add class MetodSignature
- openDialog() must be getOnly for immutable types
- add Customizations:
	. lists:
		* override item type???
	. field:
		* override type???
- add Customizations:
	. methods default param values
- ReflectionUIUtils.onTypeInstanciation()
must not use SwingRenderer
- For null field, allow custom instanciation
- it is impossible for custom field controls to prevent 
modfications of non-primitive values because readonly field
does not imply ICollectionSettings.allreadOnly for the field 
value  
- colors should never be set on components,
otherwise lookandfeel dynamic change is not taken into account.
See:
	. TextControl
	. listControl.treeControl
- menus???
- listControl: 
	. deatil view
- update translatable strings
- private => protected
- new controls:
	. spinner, slider for numbers
	. dateChooser
	. colorChooser
