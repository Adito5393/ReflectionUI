. expose more customizations feature
	. screenshot
	. in the example, first customize 
. List item double click defaut action 
. List rows alternative colors
- create infoCustomizations.ListItemDetailsSettings
- allow to unhide cutomization toolls at runtime
- allow to customize icons for:
	. fields: can be postponed as field controls need to be updatedÅ“
- icon on title bar???
- ArrayAsEnum often crashes because an item is not in the array:
=> make it more flexible

- allow to customize online help on list properties/actions
- allow to override default tooltips help on method controls
- provide swingRenderer.openAutoRollbackableDialog()
- normally a field control must be customizable for only 1 field.
Currently, customizations affects all fields having the same type  
- allow to clean customizations
- ITypeInfo.getName() should not be used for finding controls???
- write hashCode() & equals() of some inner classes where the IDE
could not generate them
- Type params must be get from the IField/MethodInfo, not ITypeInfo
just like in the Java spec.
	. add IFieldInfo.getTypeParameters()
	https://commons.apache.org/proper/commons-lang/apidocs/org/apache/commons/lang3/reflect/TypeUtils.html
	. maybe take a shortcut and implement it in a next future version
- add IListType:
	. getItemGetter(int)
	. getItemSetter(int,Obj)
- ReflectionUI parameter is often useless. Check
- polymorphiControl:
	. what if a polymorphic base type is a valid option itself (is concrete)?
	. what if there is only 1 subtype. use polymorphic control anyway?
- customizations editor recreates controls
and forms and often invalidates the customized UI
Ex: DialogAccessControl recreated while dialog open 
- secure cache ReflectionUI.precomputedTypeInfoByObject
- cleaning for end-developer:
	. add ReflectionUIError explicit messages
- rethink about read-only forms
- expose liscontrol selectionListening
- liscontrol:
	- allow to remove toolbar ???
- add ITypeInfo.hasValueOptions()???
- icons, expanded field value, ... should be part of basic type info,
not swing specific properties, as it common to most renderers and can
be ignored if not displayable??? 
- remove IListTypeInfo.getObjectSpecificItemConstructors???
- ITypeInfo.isModificationStackAccessible
	=> must be a SwingSpecificProperty???
- field periodic auto-update???
- allow to sort list view
- update ScreenShots
- update Example
- Fix all the tests
- MultipleFieldAsList with only 1 item???
- customizations :
	. filter lists: remove renamed or deleted targets???
- preset customizations object names must be special 
	. ex: prefixe with '.': Field ".position" or ".type"
- add class MetodSignature???
- add Customizations:
	. methods default param values
- For null field, allow custom instanciation
- menus???
- update translatable strings
- new controls:
	. spinner, slider for numbers
	. dateChooser
	. colorChooser
